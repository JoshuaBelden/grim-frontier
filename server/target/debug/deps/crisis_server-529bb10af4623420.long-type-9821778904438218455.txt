warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + Copy, Exact<warp::path::internal::Opaque<main::{closure#0}::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, fn() -> impl warp::Future<Output = std::result::Result<impl Reply, Rejection>> {health_handler}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (RegisterRequest,), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<tokio::sync::RwLock<HashMap<std::string::String, handler::Client>>>,), Error = Infallible> + Clone>, fn(RegisterRequest, Arc<tokio::sync::RwLock<HashMap<std::string::String, handler::Client>>>) -> impl warp::Future<Output = std::result::Result<impl Reply, Rejection>> {register_handler}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + Copy, Exact<warp::path::internal::Opaque<main::{closure#0}::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (PublishRequest,), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<tokio::sync::RwLock<HashMap<std::string::String, handler::Client>>>,), Error = Infallible> + Clone>, fn(PublishRequest, Arc<tokio::sync::RwLock<HashMap<std::string::String, handler::Client>>>) -> impl warp::Future<Output = std::result::Result<impl Reply, Rejection>> {publish_handler}>>
