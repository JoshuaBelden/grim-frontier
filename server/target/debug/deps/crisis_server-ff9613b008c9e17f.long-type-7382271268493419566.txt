fn(Ws, std::string::String, Arc<tokio::sync::RwLock<HashMap<std::string::String, Client>>>) -> impl warp::Future<Output = std::result::Result<impl Reply, Rejection>> {socket_handler}
warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<tokio::sync::RwLock<Vec<WorldEntity>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<tokio::sync::RwLock<HashMap<std::string::String, Client>>>,), Error = Infallible> + Clone>, fn(Ws, std::string::String, Arc<tokio::sync::RwLock<HashMap<std::string::String, Client>>>) -> impl warp::Future<Output = std::result::Result<impl Reply, Rejection>> {socket_handler}>
